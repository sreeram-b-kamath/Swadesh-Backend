using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Application.Interface;
using Shared;
using Microsoft.EntityFrameworkCore;
using Models;
using Shared.Data;

namespace Application.Services
{
    public class RestrictionService : IRestrictionService
    {
        private readonly ApplicationDBContext _context;

        public RestrictionService(ApplicationDBContext context)
        {
            _context = context;
        }

        public async Task<MenuFilterDto> AddRestrictionAsync(MenuFilterDto restrictionDto)
        {
            var newRestriction = new MenuFilter
            {
                Name = restrictionDto.Name,
                RestaurantId = restrictionDto.RestaurantID,
                Active = restrictionDto.Active
            };

            _context.menuFilters.Add(newRestriction);
            await _context.SaveChangesAsync();

            // After saving, the Id will be generated by the database
            restrictionDto.Id = newRestriction.Id;
            return restrictionDto;
        }

        public async Task<bool> DeleteRestrictionAsync(int id)
        {
            var restriction = await _context.menuFilters
                .Where(r => r.Id == id)
                .Select(r => new { r.Id, r.Name, r.Active, r.RestaurantId, r.Icon })
                .SingleOrDefaultAsync();

            if (restriction == null)
            {
                return false;
            }

            _context.menuFilters.Remove(new MenuFilter { Id = restriction.Id });
            await _context.SaveChangesAsync();

            return true;
        }


        public async Task<IEnumerable<MenuFilterDto>> GetRestrictionsByRestaurantIdAsync(int restaurantId)
        {
            return await _context.menuFilters
                .Where(r => r.RestaurantId == restaurantId)
                .Select(r => new MenuFilterDto
                {
                    Id = r.Id,
                    Name = r.Name,
                    Active = r.Active,
                    RestaurantID = r.RestaurantId
                })
                .ToListAsync();
        }
    }
}
